package evsbsp.client;

/* Automatically generated by EVS JavaCodeGenerator */

import evsbsp.IEcommerceOperations;
import java.util.ArrayList;
import evs.core.*;
import evs.exception.*;
import evs.interfaces.*;

public class EcommerceProxy extends AClientProxy implements IEcommerceOperations{

	//automatically generated default values
	private static final String INVOKER_ID = evsbsp.server.EcommerceInvoker.class.getName();
	private static final String OBJECT_ID = evsbsp.server.Ecommerce.class.getName();
	private static final String HOSTNAME = "localhost";
	private static final String PORT = "31337";

	public EcommerceProxy(ICallback callback){
		super(callback);
		this.aor = new AOR(new WebLocation(HOSTNAME, PORT), new ObjectReference(OBJECT_ID, INVOKER_ID));
	}

	public EcommerceProxy(InvocationStyle requestType, ICallback callback){
		super(requestType, callback);
		this.aor = new AOR(new WebLocation(HOSTNAME, PORT), new ObjectReference(OBJECT_ID, INVOKER_ID));
	}

	public Object buyOrder(evsbsp.entities.Order order, IACT act) throws NotSupportedException{
		ArrayList<Object> arguments = new ArrayList<Object>();
		arguments.add(order);
		arguments.add(act);
		Object returnObject = null;

		try{
			IInvocationObject object = new InvocationObject(getAOR(), "buyOrder", arguments, "void");
			returnObject = requestor.invoke(object, true, callback, act, requestType);
		} catch(RemotingException ex){
			 throw new NotSupportedException(ex.getMessage());
		}
		return returnObject;
	}

	public Object createCustomer(evsbsp.entities.Customer customer, IACT act) throws NotSupportedException{
		ArrayList<Object> arguments = new ArrayList<Object>();
		arguments.add(customer);
		arguments.add(act);
		Object returnObject = null;

		try{
			IInvocationObject object = new InvocationObject(getAOR(), "createCustomer", arguments, "void");
			returnObject = requestor.invoke(object, true, callback, act, requestType);
		} catch(RemotingException ex){
			 throw new NotSupportedException(ex.getMessage());
		}
		return returnObject;
	}

	public Object createProduct(evsbsp.entities.Product product, IACT act) throws NotSupportedException{
		ArrayList<Object> arguments = new ArrayList<Object>();
		arguments.add(product);
		arguments.add(act);
		Object returnObject = null;

		try{
			IInvocationObject object = new InvocationObject(getAOR(), "createProduct", arguments, "void");
			returnObject = requestor.invoke(object, true, callback, act, requestType);
		} catch(RemotingException ex){
			 throw new NotSupportedException(ex.getMessage());
		}
		return returnObject;
	}

	public Object listProducts(IACT act) throws NotSupportedException{
		ArrayList<Object> arguments = new ArrayList<Object>();
		arguments.add(act);
		Object returnObject = null;

		try{
			IInvocationObject object = new InvocationObject(getAOR(), "listProducts", arguments, "List<evsbsp.entities.Product>");
			returnObject = requestor.invoke(object, false, callback, act, requestType);
		} catch(RemotingException ex){
			 throw new NotSupportedException(ex.getMessage());
		}
		return returnObject;
	}

	public Object login(String userName, String password, IACT act) throws NotSupportedException{
		ArrayList<Object> arguments = new ArrayList<Object>();
		arguments.add(userName);
		arguments.add(password);
		arguments.add(act);
		Object returnObject = null;

		try{
			IInvocationObject object = new InvocationObject(getAOR(), "login", arguments, "evsbsp.entities.Customer");
			returnObject = requestor.invoke(object, false, callback, act, requestType);
		} catch(RemotingException ex){
			 throw new NotSupportedException(ex.getMessage());
		}
		return returnObject;
	}

	public Object updateCustomer(evsbsp.entities.Customer customer, IACT act) throws NotSupportedException{
		ArrayList<Object> arguments = new ArrayList<Object>();
		arguments.add(customer);
		arguments.add(act);
		Object returnObject = null;

		try{
			IInvocationObject object = new InvocationObject(getAOR(), "updateCustomer", arguments, "void");
			returnObject = requestor.invoke(object, true, callback, act, requestType);
		} catch(RemotingException ex){
			 throw new NotSupportedException(ex.getMessage());
		}
		return returnObject;
	}

	public Object updateProduct(evsbsp.entities.Product product, IACT act) throws NotSupportedException{
		ArrayList<Object> arguments = new ArrayList<Object>();
		arguments.add(product);
		arguments.add(act);
		Object returnObject = null;

		try{
			IInvocationObject object = new InvocationObject(getAOR(), "updateProduct", arguments, "void");
			returnObject = requestor.invoke(object, true, callback, act, requestType);
		} catch(RemotingException ex){
			 throw new NotSupportedException(ex.getMessage());
		}
		return returnObject;
	}

}
