package dummy.client;

/* Automatically generated by EVS JavaCodeGenerator */

import dummy.IDummyOperations;

import java.util.ArrayList;
import evs.core.*;
import evs.exception.*;
import evs.interfaces.*;

public class DummyProxy extends AClientProxy implements IDummyOperations{

	//automatically generated default values
	private static final String INVOKER_ID = dummy.server.DummyInvoker.class.getName();
	private static final String OBJECT_ID = dummy.server.Dummy.class.getName();
	private static final String HOSTNAME = "localhost";
	private static final String PORT = "31337";

	public DummyProxy(ICallback callback){
		super(callback);
		this.aor = new AOR(new WebLocation(HOSTNAME, PORT), new ObjectReference(OBJECT_ID, INVOKER_ID));
	}

	public DummyProxy(InvocationStyle requestType, ICallback callback){
		super(requestType, callback);
		this.aor = new AOR(new WebLocation(HOSTNAME, PORT), new ObjectReference(OBJECT_ID, INVOKER_ID));
	}

	public Object testCall(Integer a, IACT act) throws dummy.exception.DummyException, NotSupportedException{
		ArrayList<Object> arguments = new ArrayList<Object>();
		arguments.add(a);
		Object returnObject = null;

		try{
			IInvocationObject object = new InvocationObject(getAOR(), "testCall", arguments, "void");
			returnObject = requestor.invoke(object, true, callback, act, requestType);
		} catch(RemotingException ex){
			 if(ex instanceof dummy.exception.DummyException) throw (dummy.exception.DummyException) ex;
			 throw new NotSupportedException(ex.getMessage());
		}
		return returnObject;
	}

	public Object getCounter(IACT act) throws dummy.exception.DummyException, NotSupportedException{
		ArrayList<Object> arguments = new ArrayList<Object>();
		Object returnObject = null;

		try{
			IInvocationObject object = new InvocationObject(getAOR(), "getCounter", arguments, "Integer");
			returnObject = requestor.invoke(object, false, callback, act, requestType);
		} catch(RemotingException ex){
			 if(ex instanceof dummy.exception.DummyException) throw (dummy.exception.DummyException) ex;
			 throw new NotSupportedException(ex.getMessage());
		}
		return returnObject;
	}

}
